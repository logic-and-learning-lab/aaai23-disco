:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,7).
:- aleph_set(nodes,50000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,-list)).
:- modeb(*,f(+list,-list)).
:- modeb(*,cons(+element,+list,-list)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,f/2).
%% :- determination(f/2,increment/2).
%% :- determination(f/2,element/2).
:- determination(f/2,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.
:-end_bg.
:-begin_in_pos.
f([13, 87, 16, 30, 75, 31, 68, 78, 14, 80, 32, 72, 34, 68, 27, 25, 33, 79, 25, 99, 70, 48, 12, 98, 93, 8, 87, 92, 64, 39, 78, 18, 6, 92, 79, 38, 24, 48, 29, 93, 68, 80, 6, 46, 77],[13, 87, 16, 30, 75, 31, 68, 78, 14, 80, 32, 72, 34, 68, 27, 25, 33, 79, 25, 99, 70, 48, 12, 98, 93, 8, 87, 92, 64, 39, 78, 18, 6, 92, 79, 38, 24, 48, 29, 93, 68, 80, 6, 46]).
f([28, 18, 99, 44, 100, 83, 77, 46, 1, 79, 86, 41, 76, 46, 56, 50, 67, 7, 82, 27, 56, 79],[28, 18, 99, 44, 100, 83, 77, 46, 1, 79, 86, 41, 76, 46, 56, 50, 67, 7, 82, 27, 56]).
f([30, 61, 52, 50, 27, 37, 91, 40, 27, 72, 43],[30, 61, 52, 50, 27, 37, 91, 40, 27, 72]).
f([97, 84, 58, 42],[97, 84, 58]).
f([83, 70, 101, 60, 6, 84, 46, 76, 14, 38, 39, 89, 75, 47, 83, 2, 5, 95],[83, 70, 101, 60, 6, 84, 46, 76, 14, 38, 39, 89, 75, 47, 83, 2, 5]).
f([7, 9, 17, 14, 83, 98, 53, 25, 38, 64, 10, 53, 101, 12, 2, 58, 51, 7, 5, 76, 35, 64, 29, 78, 13],[7, 9, 17, 14, 83, 98, 53, 25, 38, 64, 10, 53, 101, 12, 2, 58, 51, 7, 5, 76, 35, 64, 29, 78]).
f([12, 39, 68, 47, 28, 95],[12, 39, 68, 47, 28]).
f([5, 95, 31, 20, 82, 4, 70, 90, 24, 29, 41, 33, 41, 97, 87, 9, 4, 94, 21, 40, 14, 55, 56, 45, 98, 38, 70, 4, 49, 51, 41, 83, 50, 57, 31],[5, 95, 31, 20, 82, 4, 70, 90, 24, 29, 41, 33, 41, 97, 87, 9, 4, 94, 21, 40, 14, 55, 56, 45, 98, 38, 70, 4, 49, 51, 41, 83, 50, 57]).
f([58, 25, 96, 35, 55, 46, 52, 9, 99, 25, 13, 90, 54],[58, 25, 96, 35, 55, 46, 52, 9, 99, 25, 13, 90]).
f([12, 94, 100, 5],[12, 94, 100]).
:-end_in_pos.
:-begin_in_neg.
f([33, 36, 81, 91, 24, 88, 70, 1, 8, 55, 73, 48, 92, 79, 89, 91, 65, 66, 96, 20, 41, 47, 77, 88, 59, 69],[33, 36, 81, 91, 24, 88, 70, 1, 8, 55, 73, 48, 92, 79, 89, 91, 65, 66, 96, 20, 41, 47, 77, 88, 59, 69]).
f([55, 7, 23, 34, 65, 21, 74, 59, 54, 94, 64, 30, 98, 31, 32, 71, 13, 58, 35, 27, 22, 68, 19, 15, 18, 39, 68, 9, 43, 9, 62, 77, 78, 88, 70, 37, 88, 94, 90, 2, 61, 96, 16, 27, 75, 86, 83, 47, 76],[55, 7, 23, 34, 65, 21, 74, 59, 54, 94, 64, 30, 98, 31, 32, 71, 13, 58, 35, 27, 22, 68, 19, 15, 18, 39, 68, 9, 43, 9, 62, 77, 78, 88, 70, 37, 88, 94, 90, 2, 61, 96, 16, 27, 75, 86, 83, 47, 76]).
f([16, 31, 32, 100, 53, 25, 2, 66, 30, 81, 50, 95, 87, 94, 6, 72, 31, 76, 29, 23, 85, 89, 23, 88, 39, 30, 6, 36, 50, 60, 28, 41, 7, 90, 33, 78, 4, 96, 56, 70, 35, 16, 41, 15, 51, 33, 67, 27, 53, 79],[16, 31, 32, 100, 53, 25, 2, 66, 30, 81, 50, 95, 87, 94, 6, 72, 31, 76, 29, 23, 85, 89, 23, 88, 39, 30, 6, 36, 50, 60, 28, 41, 7, 90, 33, 78, 4, 96, 56, 70, 35, 16, 41, 15, 51, 33, 67, 27, 53, 79]).
f([8, 34, 96, 64, 98],[8, 34, 96, 64, 98]).
f([97, 70, 22, 17, 31, 90, 1, 33, 35, 63, 64, 37, 29, 3, 45, 87, 49, 82, 13, 1, 70, 28, 17, 32, 18, 41, 55, 30, 97, 2, 63, 25, 98, 20, 11],[97, 70, 22, 17, 31, 90, 1, 33, 35, 63, 64, 37, 29, 3, 45, 87, 49, 82, 13, 1, 70, 28, 17, 32, 18, 41, 55, 30, 97, 2, 63, 25, 98, 20, 11]).
f([100, 22, 28, 40, 84, 59, 59, 29, 64, 86, 31],[100, 22, 28, 40, 84, 59, 59, 29, 64, 86, 31]).
f([10, 30, 27, 36, 63, 57, 43, 78, 38, 9, 83, 38, 58, 13, 51, 50, 57, 57, 38, 38, 20, 74, 58, 88, 80, 66, 43, 101, 52, 60, 13, 36, 74, 7, 1, 1, 48, 27, 72, 79, 95, 62, 97, 95],[10, 30, 27, 36, 63, 57, 43, 78, 38, 9, 83, 38, 58, 13, 51, 50, 57, 57, 38, 38, 20, 74, 58, 88, 80, 66, 43, 101, 52, 60, 13, 36, 74, 7, 1, 1, 48, 27, 72, 79, 95, 62, 97, 95]).
f([66, 31, 64, 36, 73, 67, 90, 24, 14, 66, 3, 59, 9, 30, 76, 94, 7, 16, 95, 12, 35, 53, 19, 45, 92, 21, 96, 54, 64, 95],[66, 31, 64, 36, 73, 67, 90, 24, 14, 66, 3, 59, 9, 30, 76, 94, 7, 16, 95, 12, 35, 53, 19, 45, 92, 21, 96, 54, 64, 95]).
f([35, 54, 21, 27, 90, 71, 43, 27, 36, 78, 15, 15],[35, 54, 21, 27, 90, 71, 43, 27, 36, 78, 15, 15]).
f([37, 82, 56, 54, 64, 40, 52, 84, 11, 44, 35, 76, 7, 93, 90, 12, 38, 96, 77, 49, 1, 7, 20, 80, 60, 2],[37, 82, 56, 54, 64, 40, 52, 84, 11, 44, 35, 76, 7, 93, 90, 12, 38, 96, 77, 49, 1, 7, 20, 80, 60, 2]).
:-end_in_neg.
