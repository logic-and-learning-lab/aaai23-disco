:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,7).
:- aleph_set(nodes,50000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,-list)).
:- modeb(*,f(+list,-list)).
:- modeb(*,cons(+element,+list,-list)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,f/2).
%% :- determination(f/2,increment/2).
%% :- determination(f/2,element/2).
:- determination(f/2,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.
:-end_bg.
:-begin_in_pos.
f([71, 21, 83, 60, 53, 79, 97, 54, 34, 65, 65, 24, 72, 91, 92, 87, 5, 53, 100, 91, 76, 51, 65, 46, 2],[71, 21, 83, 60, 53, 79, 97, 54, 34, 65, 65, 24, 72, 91, 92, 87, 5, 53, 100, 91, 76, 51, 65, 46]).
f([72, 72, 76, 67, 11, 52, 7, 75, 47, 39, 70, 101, 77, 23, 1, 74, 2],[72, 72, 76, 67, 11, 52, 7, 75, 47, 39, 70, 101, 77, 23, 1, 74]).
f([2, 62, 4, 20, 91, 23, 86],[2, 62, 4, 20, 91, 23]).
f([39, 76, 92, 77, 61, 7, 56, 10, 30, 74, 73, 30],[39, 76, 92, 77, 61, 7, 56, 10, 30, 74, 73]).
f([71, 53, 36, 17, 21, 70, 49, 25, 35, 9, 51, 46, 19, 64, 62, 42, 13, 38, 80, 2, 54, 10, 36, 68, 26, 22, 38, 95, 68, 52, 44, 14, 17, 51, 67, 99, 62, 83, 59, 34, 58, 74, 44, 74, 98, 79],[71, 53, 36, 17, 21, 70, 49, 25, 35, 9, 51, 46, 19, 64, 62, 42, 13, 38, 80, 2, 54, 10, 36, 68, 26, 22, 38, 95, 68, 52, 44, 14, 17, 51, 67, 99, 62, 83, 59, 34, 58, 74, 44, 74, 98]).
f([100, 1, 76, 15, 69, 4, 56, 56, 49, 59, 96, 31, 34, 84, 61, 61, 26, 94, 14, 30, 52, 60, 58, 86, 17, 8, 5, 14, 53, 86, 44, 64, 67],[100, 1, 76, 15, 69, 4, 56, 56, 49, 59, 96, 31, 34, 84, 61, 61, 26, 94, 14, 30, 52, 60, 58, 86, 17, 8, 5, 14, 53, 86, 44, 64]).
f([48, 40, 3, 34, 90, 96, 14, 3, 40, 96, 67, 95, 60, 30, 70, 95, 7, 5, 67, 56],[48, 40, 3, 34, 90, 96, 14, 3, 40, 96, 67, 95, 60, 30, 70, 95, 7, 5, 67]).
f([25, 1, 37, 14, 12, 99, 47, 95, 5, 17, 37, 100, 66, 61, 61, 60, 10, 28, 84, 55, 36, 5, 95, 96, 70, 30, 20, 63, 90],[25, 1, 37, 14, 12, 99, 47, 95, 5, 17, 37, 100, 66, 61, 61, 60, 10, 28, 84, 55, 36, 5, 95, 96, 70, 30, 20, 63]).
f([67, 10, 52, 20, 28, 68, 53, 101, 93, 65, 29, 47, 37, 39, 16, 54, 50, 19, 28, 39, 37, 98],[67, 10, 52, 20, 28, 68, 53, 101, 93, 65, 29, 47, 37, 39, 16, 54, 50, 19, 28, 39, 37]).
f([38, 3, 61, 36, 92, 78, 3, 48, 56, 94, 76, 30, 20, 91, 69, 7, 24, 101, 28, 98, 45, 20, 32, 68, 43, 92, 73, 13, 15, 95, 55, 68, 72, 50, 76, 17, 9, 48, 97, 44],[38, 3, 61, 36, 92, 78, 3, 48, 56, 94, 76, 30, 20, 91, 69, 7, 24, 101, 28, 98, 45, 20, 32, 68, 43, 92, 73, 13, 15, 95, 55, 68, 72, 50, 76, 17, 9, 48, 97]).
:-end_in_pos.
:-begin_in_neg.
f([41, 89, 68, 95, 22, 21, 66, 14, 57, 96, 21, 89, 37, 73, 96, 74, 90, 24, 76, 92, 58, 30, 13, 29, 9, 1, 40, 88, 23, 68, 39, 38, 45, 73, 64, 7, 58, 37, 77, 26, 85, 72, 62, 36, 40, 19, 28, 92, 36, 19],[41, 89, 68, 95, 22, 21, 66, 14, 57, 96, 21, 89, 37, 73, 96, 74, 90, 24, 76, 92, 58, 30, 13, 29, 9, 1, 40, 88, 23, 68, 39, 38, 45, 73, 64, 7, 58, 37, 77, 26, 85, 72, 62, 36, 40, 19, 28, 92, 36, 19]).
f([100, 51, 57, 93, 63, 59, 13],[100, 51, 57, 93, 63, 59, 13]).
f([41, 53, 74, 8, 34, 92, 2, 89, 1, 10, 32, 17, 50, 77, 89, 14, 101, 51, 95, 12, 43, 9, 43, 100, 55, 86, 77, 73, 68, 64, 35, 85, 52, 67, 77, 6, 60, 8, 89, 86],[41, 53, 74, 8, 34, 92, 2, 89, 1, 10, 32, 17, 50, 77, 89, 14, 101, 51, 95, 12, 43, 9, 43, 100, 55, 86, 77, 73, 68, 64, 35, 85, 52, 67, 77, 6, 60, 8, 89, 86]).
f([81, 30, 50, 88, 28, 48, 52, 32, 64, 67, 48, 8, 53, 16, 64, 88, 58, 13, 49, 38, 4, 10, 26, 9, 42, 38, 38, 72, 40, 12, 62, 82, 26, 24, 91, 73],[81, 30, 50, 88, 28, 48, 52, 32, 64, 67, 48, 8, 53, 16, 64, 88, 58, 13, 49, 38, 4, 10, 26, 9, 42, 38, 38, 72, 40, 12, 62, 82, 26, 24, 91, 73]).
f([38, 3, 92, 75, 65, 51],[38, 3, 92, 75, 65, 51]).
f([51, 30, 33, 75, 63, 19, 87, 40, 20, 97, 19, 101, 75, 62],[51, 30, 33, 75, 63, 19, 87, 40, 20, 97, 19, 101, 75, 62]).
f([66, 9, 95, 62],[66, 9, 95, 62]).
f([90, 87, 83, 27, 98, 65, 93, 45, 94, 8, 60],[90, 87, 83, 27, 98, 65, 93, 45, 94, 8, 60]).
f([47, 86, 52, 77, 29, 27, 40, 81, 25, 13, 8, 50, 8, 87, 95, 73, 68, 86, 13, 86, 59, 64, 45, 79, 90, 87, 32],[47, 86, 52, 77, 29, 27, 40, 81, 25, 13, 8, 50, 8, 87, 95, 73, 68, 86, 13, 86, 59, 64, 45, 79, 90, 87, 32]).
f([99, 88, 61, 66, 75, 79, 101, 55, 52, 27, 63, 80, 47, 4, 97, 57, 95],[99, 88, 61, 66, 75, 79, 101, 55, 52, 27, 63, 80, 47, 4, 97, 57, 95]).
:-end_in_neg.
