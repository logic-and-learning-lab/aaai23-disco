:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,7).
:- aleph_set(nodes,50000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,-list)).
:- modeb(*,f(+list,-list)).
:- modeb(*,cons(+element,+list,-list)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,f/2).
%% :- determination(f/2,increment/2).
%% :- determination(f/2,element/2).
:- determination(f/2,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.
:-end_bg.
:-begin_in_pos.
f([69, 72, 60, 77, 20, 67, 1, 79, 38, 98, 88, 9, 51, 95, 60, 5, 9, 54, 94, 10, 8, 66, 80, 2, 67, 20, 68, 66, 4, 64, 86, 93, 10, 73, 46, 1, 13, 2, 22, 83, 42, 49, 20, 16, 69, 13, 52, 88, 3, 33],[69, 72, 60, 77, 20, 67, 1, 79, 38, 98, 88, 9, 51, 95, 60, 5, 9, 54, 94, 10, 8, 66, 80, 2, 67, 20, 68, 66, 4, 64, 86, 93, 10, 73, 46, 1, 13, 2, 22, 83, 42, 49, 20, 16, 69, 13, 52, 88, 3]).
f([79, 64, 52, 74, 39, 67, 35, 70, 14, 81, 11, 16, 97],[79, 64, 52, 74, 39, 67, 35, 70, 14, 81, 11, 16]).
f([31, 101, 64, 10, 28, 93, 62, 36, 51, 84, 93, 36, 29, 95, 62, 99, 37, 71, 18, 6, 75],[31, 101, 64, 10, 28, 93, 62, 36, 51, 84, 93, 36, 29, 95, 62, 99, 37, 71, 18, 6]).
f([31, 15, 9, 2, 61, 43, 31, 5, 99, 101, 64, 91, 53, 16, 3, 58, 33, 61, 46, 57, 10, 22, 26, 57, 7, 80, 55, 89, 53, 40, 47, 93, 22, 77, 37, 75, 69, 72, 41, 41, 97, 27, 67, 69, 96, 17, 81],[31, 15, 9, 2, 61, 43, 31, 5, 99, 101, 64, 91, 53, 16, 3, 58, 33, 61, 46, 57, 10, 22, 26, 57, 7, 80, 55, 89, 53, 40, 47, 93, 22, 77, 37, 75, 69, 72, 41, 41, 97, 27, 67, 69, 96, 17]).
f([95, 1, 10, 74, 60, 9, 11, 30, 4, 24, 88, 5, 39, 87, 65, 19, 17, 59, 5, 36],[95, 1, 10, 74, 60, 9, 11, 30, 4, 24, 88, 5, 39, 87, 65, 19, 17, 59, 5]).
f([46, 69, 35, 53, 75, 20, 66, 69, 76, 22, 88, 15, 1, 16, 28, 85, 86, 91, 6, 89, 51, 33, 100, 55, 17, 77, 99, 1, 25, 7, 88, 35, 7, 34, 21, 83, 15, 97, 91],[46, 69, 35, 53, 75, 20, 66, 69, 76, 22, 88, 15, 1, 16, 28, 85, 86, 91, 6, 89, 51, 33, 100, 55, 17, 77, 99, 1, 25, 7, 88, 35, 7, 34, 21, 83, 15, 97]).
f([48, 16, 20, 37, 40, 23, 32, 69, 93, 76, 24, 31, 3, 57, 7, 80, 58, 53, 72, 29, 58, 86, 22, 63, 4, 86, 17, 3, 85, 40],[48, 16, 20, 37, 40, 23, 32, 69, 93, 76, 24, 31, 3, 57, 7, 80, 58, 53, 72, 29, 58, 86, 22, 63, 4, 86, 17, 3, 85]).
f([66, 75, 70, 40, 68, 13, 100, 68, 4, 38, 77, 57, 45],[66, 75, 70, 40, 68, 13, 100, 68, 4, 38, 77, 57]).
f([3, 96, 16, 76, 23, 20, 75, 53, 14, 19, 29, 2, 65, 8, 31, 69, 19, 21, 58, 75, 12, 56],[3, 96, 16, 76, 23, 20, 75, 53, 14, 19, 29, 2, 65, 8, 31, 69, 19, 21, 58, 75, 12]).
f([54, 55, 47, 47, 66, 53, 1, 11, 10, 2, 47, 46, 5, 72, 79, 99, 48, 36, 2, 48, 84, 84, 55, 42, 65, 37, 70, 46, 71, 72, 41, 58, 40, 17, 24, 4, 91, 87],[54, 55, 47, 47, 66, 53, 1, 11, 10, 2, 47, 46, 5, 72, 79, 99, 48, 36, 2, 48, 84, 84, 55, 42, 65, 37, 70, 46, 71, 72, 41, 58, 40, 17, 24, 4, 91]).
:-end_in_pos.
:-begin_in_neg.
f([95, 77, 55, 27, 33, 53, 12, 70, 19, 70, 72, 75, 37, 66, 49, 24, 32, 15, 76, 95, 64, 85, 49, 86, 20, 36, 54, 56, 41, 9, 76, 13, 13],[95, 77, 55, 27, 33, 53, 12, 70, 19, 70, 72, 75, 37, 66, 49, 24, 32, 15, 76, 95, 64, 85, 49, 86, 20, 36, 54, 56, 41, 9, 76, 13, 13]).
f([27, 9, 63, 47, 1, 76, 93, 99, 25],[27, 9, 63, 47, 1, 76, 93, 99, 25]).
f([45, 20, 70, 25, 47, 40, 70, 92, 83, 5, 55, 47, 65, 50, 51, 58, 87, 35, 56, 14, 99, 12],[45, 20, 70, 25, 47, 40, 70, 92, 83, 5, 55, 47, 65, 50, 51, 58, 87, 35, 56, 14, 99, 12]).
f([84, 48, 72, 41, 96, 7, 53, 76, 20, 74, 86, 28, 21, 24, 85, 24, 51, 73, 58, 27, 5, 68, 51, 83, 32, 66, 61, 101, 42, 98, 35, 88, 61, 14, 79, 80, 19, 26, 26],[84, 48, 72, 41, 96, 7, 53, 76, 20, 74, 86, 28, 21, 24, 85, 24, 51, 73, 58, 27, 5, 68, 51, 83, 32, 66, 61, 101, 42, 98, 35, 88, 61, 14, 79, 80, 19, 26, 26]).
f([23, 19, 20, 96, 88],[23, 19, 20, 96, 88]).
f([13, 79, 24, 78, 34, 98, 84, 100, 27, 85, 36],[13, 79, 24, 78, 34, 98, 84, 100, 27, 85, 36]).
f([67, 91, 37, 38, 79, 2, 23, 87, 57, 13, 54, 52, 48, 57, 84],[67, 91, 37, 38, 79, 2, 23, 87, 57, 13, 54, 52, 48, 57, 84]).
f([72, 32, 14, 53, 28, 77, 73, 42, 27, 11],[72, 32, 14, 53, 28, 77, 73, 42, 27, 11]).
f([90, 64, 2, 98, 42, 58, 25, 60, 25, 10, 16, 95, 75, 64, 83, 41, 42, 91, 62, 7, 50, 96, 28, 10, 70, 99, 96, 9, 59, 49, 30, 4, 32, 73, 49, 101, 15, 26, 32, 24, 12, 2, 15, 80, 35, 45, 24, 6, 24],[90, 64, 2, 98, 42, 58, 25, 60, 25, 10, 16, 95, 75, 64, 83, 41, 42, 91, 62, 7, 50, 96, 28, 10, 70, 99, 96, 9, 59, 49, 30, 4, 32, 73, 49, 101, 15, 26, 32, 24, 12, 2, 15, 80, 35, 45, 24, 6, 24]).
f([10, 78, 5, 37, 12, 16, 89, 23, 76, 86],[10, 78, 5, 37, 12, 16, 89, 23, 76, 86]).
:-end_in_neg.
