:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,7).
:- aleph_set(nodes,50000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,-list)).
:- modeb(*,f(+list,-list)).
:- modeb(*,cons(+element,+list,-list)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,f/2).
%% :- determination(f/2,increment/2).
%% :- determination(f/2,element/2).
:- determination(f/2,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.
:-end_bg.
:-begin_in_pos.
f([26, 45, 75, 45, 38, 100, 79, 1, 34, 24, 88, 88, 63, 9, 40, 12, 50, 80, 62, 51, 44, 25, 54, 27, 6, 42, 14, 58, 42, 15, 84, 64, 33, 32, 2, 85, 72, 20, 75],[26, 45, 75, 45, 38, 100, 79, 1, 34, 24, 88, 88, 63, 9, 40, 12, 50, 80, 62, 51, 44, 25, 54, 27, 6, 42, 14, 58, 42, 15, 84, 64, 33, 32, 2, 85, 72, 20]).
f([32, 93, 66, 93, 22, 90, 57, 101, 40, 80, 48, 76, 72, 82, 61, 19],[32, 93, 66, 93, 22, 90, 57, 101, 40, 80, 48, 76, 72, 82, 61]).
f([75, 78, 84, 61, 50, 81, 28, 66, 84, 60, 70, 3],[75, 78, 84, 61, 50, 81, 28, 66, 84, 60, 70]).
f([13, 10, 13, 48, 89, 14, 6, 25, 99, 82, 11, 77, 94, 96, 72, 47, 98, 60, 35, 36, 50],[13, 10, 13, 48, 89, 14, 6, 25, 99, 82, 11, 77, 94, 96, 72, 47, 98, 60, 35, 36]).
f([8, 59, 84, 63, 51, 67, 36, 45, 33, 85],[8, 59, 84, 63, 51, 67, 36, 45, 33]).
f([65, 50, 16, 72, 31, 9, 35, 3, 82, 39, 39, 19, 42, 20, 73, 96, 61],[65, 50, 16, 72, 31, 9, 35, 3, 82, 39, 39, 19, 42, 20, 73, 96]).
f([5, 24, 51, 101, 15, 27, 39, 31, 20, 75, 70, 53, 4, 77, 18, 26, 95, 16, 65, 95, 27, 77, 100, 92, 79],[5, 24, 51, 101, 15, 27, 39, 31, 20, 75, 70, 53, 4, 77, 18, 26, 95, 16, 65, 95, 27, 77, 100, 92]).
f([92, 16, 38, 65, 10, 21, 26, 101, 40, 72, 59, 17, 40, 28, 79, 58, 3, 32, 81, 72, 34, 7],[92, 16, 38, 65, 10, 21, 26, 101, 40, 72, 59, 17, 40, 28, 79, 58, 3, 32, 81, 72, 34]).
f([46, 66, 65, 72, 83, 41, 41, 64, 1, 35, 87, 58, 68, 28, 35, 62, 50, 74, 97, 100, 58, 83, 83, 88, 79, 40, 34, 53, 79, 47, 34, 99, 48, 95, 88, 5, 35, 73, 26, 34, 82, 42, 7],[46, 66, 65, 72, 83, 41, 41, 64, 1, 35, 87, 58, 68, 28, 35, 62, 50, 74, 97, 100, 58, 83, 83, 88, 79, 40, 34, 53, 79, 47, 34, 99, 48, 95, 88, 5, 35, 73, 26, 34, 82, 42]).
f([20, 68, 63, 29, 53, 18, 32, 13, 20, 80, 95, 95, 27, 45, 28, 3, 45, 65, 75, 3, 29, 28, 94, 92, 42, 99, 49, 83, 29, 81, 45, 54, 51, 47, 70, 92, 46, 32, 5, 10, 4, 101, 30, 47, 73, 62],[20, 68, 63, 29, 53, 18, 32, 13, 20, 80, 95, 95, 27, 45, 28, 3, 45, 65, 75, 3, 29, 28, 94, 92, 42, 99, 49, 83, 29, 81, 45, 54, 51, 47, 70, 92, 46, 32, 5, 10, 4, 101, 30, 47, 73]).
:-end_in_pos.
:-begin_in_neg.
f([89, 39, 27, 92, 85, 1, 81, 84, 37, 41, 72, 8, 87, 43, 57, 40, 80, 30, 44],[89, 39, 27, 92, 85, 1, 81, 84, 37, 41, 72, 8, 87, 43, 57, 40, 80, 30, 44]).
f([53, 7, 32, 24, 79, 91, 41, 6, 23, 24, 17, 82, 71, 76, 34, 23],[53, 7, 32, 24, 79, 91, 41, 6, 23, 24, 17, 82, 71, 76, 34, 23]).
f([98, 12, 65, 46, 83, 44, 74, 7, 14, 75, 47, 7, 80, 82, 2, 19, 54, 16, 66, 13, 44, 56, 77, 68, 29, 54, 97, 5, 40, 95, 26, 92, 37, 28, 41, 74],[98, 12, 65, 46, 83, 44, 74, 7, 14, 75, 47, 7, 80, 82, 2, 19, 54, 16, 66, 13, 44, 56, 77, 68, 29, 54, 97, 5, 40, 95, 26, 92, 37, 28, 41, 74]).
f([10, 11, 22, 6],[10, 11, 22, 6]).
f([16, 69, 3, 51, 25, 101, 75, 91, 23, 90, 100, 62, 60, 35, 39],[16, 69, 3, 51, 25, 101, 75, 91, 23, 90, 100, 62, 60, 35, 39]).
f([101, 18],[101, 18]).
f([45, 68, 73, 63, 18, 46, 96, 17, 37, 32, 26, 51, 11, 12, 51, 18, 35, 25, 71, 91, 98, 71, 5, 67, 43],[45, 68, 73, 63, 18, 46, 96, 17, 37, 32, 26, 51, 11, 12, 51, 18, 35, 25, 71, 91, 98, 71, 5, 67, 43]).
f([13, 45, 60, 8, 95, 60, 45, 56, 71, 56, 54, 36, 62, 3, 78, 41, 64, 92, 23, 91, 11, 72, 85, 2, 68, 97, 101, 27, 49, 28, 68, 51, 14, 6, 14, 12, 101, 98],[13, 45, 60, 8, 95, 60, 45, 56, 71, 56, 54, 36, 62, 3, 78, 41, 64, 92, 23, 91, 11, 72, 85, 2, 68, 97, 101, 27, 49, 28, 68, 51, 14, 6, 14, 12, 101, 98]).
f([10, 31, 61, 77, 24, 34, 28, 64, 10, 74, 27, 56, 99, 20, 34, 40, 10, 82, 49, 89, 20, 45, 98, 54, 44, 97, 12, 43, 57, 88, 63, 73, 59, 86, 18, 20, 19, 6, 20, 90, 35, 39, 14, 100, 4, 70, 94, 32, 8],[10, 31, 61, 77, 24, 34, 28, 64, 10, 74, 27, 56, 99, 20, 34, 40, 10, 82, 49, 89, 20, 45, 98, 54, 44, 97, 12, 43, 57, 88, 63, 73, 59, 86, 18, 20, 19, 6, 20, 90, 35, 39, 14, 100, 4, 70, 94, 32, 8]).
f([33, 16, 48, 78, 40, 95, 23, 49, 101, 62, 90],[33, 16, 48, 78, 40, 95, 23, 49, 101, 62, 90]).
:-end_in_neg.
