:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,7).
:- aleph_set(nodes,50000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,+element,-list)).
:- modeb(*,f(+list,+element,-list)).

:- determination(f/3,head/2).
:- determination(f/3,tail/2).
:- determination(f/3,geq/2).
:- determination(f/3,empty/1).
:- determination(f/3,even/1).
:- determination(f/3,odd/1).
:- determination(f/3,one/1).
:- determination(f/3,zero/1).
:- determination(f/3,decrement/2).
:- determination(f/3,f/3).
%% :- determination(f/3,increment/2).
%% :- determination(f/3,element/2).
%% :- determination(f/3,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.
:-end_bg.
:-begin_in_pos.
f([55, 50, 12, 55, 52, 20, 86, 72, 12, 79, 74, 56, 25, 6, 22, 67, 83, 25, 14, 6, 88, 69, 12, 23, 100, 65, 39, 27, 52, 78, 64, 76, 92, 81, 74, 98, 34, 58, 18, 81, 41, 11, 72, 67, 40, 22, 2, 94, 20, 100, 87],21,[69, 12, 23, 100, 65, 39, 27, 52, 78, 64, 76, 92, 81, 74, 98, 34, 58, 18, 81, 41, 11, 72, 67, 40, 22, 2, 94, 20, 100, 87]).
f([29, 36, 66, 90, 41, 88, 38, 12, 101],7,[12, 101]).
f([55, 61, 78, 100, 63, 46, 33, 26, 27, 27, 98, 42, 84, 11, 16, 31, 10, 43, 31, 100, 25, 36, 79, 12, 15, 12, 78, 43, 76, 42, 60, 90, 71, 45, 86, 68, 96, 70, 69, 5, 74, 57, 19, 43],6,[33, 26, 27, 27, 98, 42, 84, 11, 16, 31, 10, 43, 31, 100, 25, 36, 79, 12, 15, 12, 78, 43, 76, 42, 60, 90, 71, 45, 86, 68, 96, 70, 69, 5, 74, 57, 19, 43]).
f([15, 59, 76, 33, 38, 44, 94, 97, 11, 54, 99, 70, 46, 81, 41, 4, 84, 22, 74, 84, 87, 35, 5, 8, 22, 87, 38, 53, 60, 92, 20, 16, 60, 99, 85, 20, 79],30,[20, 16, 60, 99, 85, 20, 79]).
f([36, 97, 96, 73, 52, 58, 26, 39, 70, 32, 85, 71, 41, 3, 2, 16, 63, 3, 19, 78, 25, 72, 27, 93, 42, 3, 97, 46, 61, 68, 85, 35, 7, 31, 16, 93, 7],10,[85, 71, 41, 3, 2, 16, 63, 3, 19, 78, 25, 72, 27, 93, 42, 3, 97, 46, 61, 68, 85, 35, 7, 31, 16, 93, 7]).
f([94, 45, 70, 47, 14, 77, 20, 72, 87, 48, 77, 44, 76, 73, 25, 42, 15, 15, 42, 66, 52, 87, 54, 13, 10, 24, 92, 36, 60, 78, 58, 77, 72, 20, 64, 21, 7, 10],11,[44, 76, 73, 25, 42, 15, 15, 42, 66, 52, 87, 54, 13, 10, 24, 92, 36, 60, 78, 58, 77, 72, 20, 64, 21, 7, 10]).
f([19, 38, 21, 3, 56, 76],6,[]).
f([24, 78, 86, 59, 73, 8, 87, 17, 61, 97, 58, 68, 33, 75, 25, 97, 59, 97, 23, 71, 70],14,[25, 97, 59, 97, 23, 71, 70]).
f([20, 52, 48, 47, 57, 6, 83, 73, 17, 22, 94, 96, 11, 82, 68, 30, 53, 86, 30],19,[]).
f([65, 13, 50, 98, 51, 4, 41, 59, 41, 25, 51, 29, 33, 84, 27, 69, 92, 27, 65, 56, 44, 4, 23, 88, 74, 31, 74, 38, 52, 13, 96, 33, 16, 37, 49, 40, 70, 15, 85, 65, 54, 42, 55, 74, 100, 70, 79, 9],8,[41, 25, 51, 29, 33, 84, 27, 69, 92, 27, 65, 56, 44, 4, 23, 88, 74, 31, 74, 38, 52, 13, 96, 33, 16, 37, 49, 40, 70, 15, 85, 65, 54, 42, 55, 74, 100, 70, 79, 9]).
:-end_in_pos.
:-begin_in_neg.
f([91, 65, 77, 97, 13, 15, 87, 11, 74, 60, 91, 43, 22, 47, 63, 17, 87],11,[13, 15, 87, 11, 74, 60, 91, 43, 22, 47, 63, 17, 87]).
f([58, 59, 56, 2, 12, 92, 40, 29, 17, 101, 62, 19, 64, 38, 9, 98, 15, 41],5,[29, 17, 101, 62, 19, 64, 38, 9, 98, 15, 41]).
f([60, 98, 79, 41, 71, 50, 5, 84, 100, 45, 36, 85, 30, 56, 44, 37, 73, 33, 51, 82, 50, 34, 5, 59, 16, 46, 56, 44, 66, 46, 18, 27, 29, 22, 64, 46, 33, 89, 17, 19, 20, 73, 5, 67, 41, 76],6,[29, 22, 64, 46, 33, 89, 17, 19, 20, 73, 5, 67, 41, 76]).
f([32, 32, 37, 92, 91, 71, 64, 75, 80, 49],8,[32, 32, 37, 92, 91, 71, 64, 75, 80, 49]).
f([19, 94, 14, 25, 91, 77, 97, 23, 61, 11, 25, 79, 69, 64, 83],15,[64, 83]).
f([87, 81, 94, 52, 48, 84, 82, 88, 30, 22, 67, 44, 76, 35, 11, 27, 88, 68, 30, 69, 81, 32, 85, 75, 25, 54, 72, 40, 35, 90, 14, 87, 2, 58],10,[72, 40, 35, 90, 14, 87, 2, 58]).
f([86, 17, 29, 70, 12, 91, 29, 26, 3, 11, 21, 68, 2, 78, 78, 101, 81, 27, 76, 93, 97, 6, 15, 98, 69, 98, 77, 3, 15, 32, 39, 86, 94, 50, 80, 58, 82, 15, 20, 11, 42],23,[3, 15, 32, 39, 86, 94, 50, 80, 58, 82, 15, 20, 11, 42]).
f([6, 38, 71, 12, 17, 1, 95, 18, 51, 4, 48, 38, 10, 5, 35],9,[51, 4, 48, 38, 10, 5, 35]).
f([93, 47, 68, 4, 59, 37, 6, 84, 47, 35, 39, 6, 73],9,[4, 59, 37, 6, 84, 47, 35, 39, 6, 73]).
f([33, 72, 31, 23, 44, 95, 52, 35, 9, 98],2,[44, 95, 52, 35, 9, 98]).
:-end_in_neg.
