:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,7).
:- aleph_set(nodes,50000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,+element,-list)).
:- modeb(*,f(+list,+element,-list)).

:- determination(f/3,head/2).
:- determination(f/3,tail/2).
:- determination(f/3,geq/2).
:- determination(f/3,empty/1).
:- determination(f/3,even/1).
:- determination(f/3,odd/1).
:- determination(f/3,one/1).
:- determination(f/3,zero/1).
:- determination(f/3,decrement/2).
:- determination(f/3,f/3).
%% :- determination(f/3,increment/2).
%% :- determination(f/3,element/2).
%% :- determination(f/3,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.
:-end_bg.
:-begin_in_pos.
f([94, 43, 93, 96, 3, 74, 88, 38, 74, 72, 77, 24, 7, 77, 65, 22, 80, 34, 9, 87, 91],5,[74, 88, 38, 74, 72, 77, 24, 7, 77, 65, 22, 80, 34, 9, 87, 91]).
f([81, 44, 16, 44, 33, 77, 4, 79, 61, 18, 66, 16, 19, 34, 54, 48, 36, 41, 37, 9, 44, 50, 67, 37, 57, 79, 58, 24, 13, 42, 44, 42, 28, 23, 78, 63, 82, 95, 98, 68, 3, 89, 12, 11, 100, 73, 14],32,[28, 23, 78, 63, 82, 95, 98, 68, 3, 89, 12, 11, 100, 73, 14]).
f([21, 86, 52, 13, 13, 69, 77, 69, 33, 18, 36, 28, 24, 32, 101, 75, 81],1,[86, 52, 13, 13, 69, 77, 69, 33, 18, 36, 28, 24, 32, 101, 75, 81]).
f([74, 79, 33, 28, 47, 2, 41, 79, 5, 13, 47, 20, 95, 90, 49, 64, 12, 56, 66, 15, 8, 59, 13, 76, 38, 58, 100, 100, 76, 19],16,[12, 56, 66, 15, 8, 59, 13, 76, 38, 58, 100, 100, 76, 19]).
f([51, 31, 84, 41, 86, 27, 31, 72, 101, 18, 43, 55, 22, 39, 68, 41, 7, 90, 50, 28, 30, 26, 43, 78, 52, 78, 17, 53, 17, 97, 89, 90, 56, 82, 41, 14, 97, 99, 15, 10, 69, 69, 24, 5, 90, 74, 87, 89],19,[28, 30, 26, 43, 78, 52, 78, 17, 53, 17, 97, 89, 90, 56, 82, 41, 14, 97, 99, 15, 10, 69, 69, 24, 5, 90, 74, 87, 89]).
f([52, 43, 61, 2, 82, 18, 85, 15, 97, 40, 69, 93, 100, 64, 47, 71, 60, 54, 66, 77, 46, 52, 67, 99, 11, 27, 7, 79, 49, 32, 99, 45, 28],19,[77, 46, 52, 67, 99, 11, 27, 7, 79, 49, 32, 99, 45, 28]).
f([12, 48, 44, 78, 59, 52, 21, 84, 71, 20, 89, 32, 65, 22, 12, 30],11,[32, 65, 22, 12, 30]).
f([46, 45, 71, 89, 52, 82, 90, 26, 8, 45, 36, 65, 47, 75, 52, 93, 66, 26, 26, 6, 71, 94, 48],8,[8, 45, 36, 65, 47, 75, 52, 93, 66, 26, 26, 6, 71, 94, 48]).
f([76, 25, 55, 49, 94, 38, 56, 79],1,[25, 55, 49, 94, 38, 56, 79]).
f([55, 20, 57, 41, 80, 77, 59, 93, 55, 101, 93, 86, 17, 19, 51, 38, 20, 23, 5, 91, 51, 40, 44, 38, 59, 9, 11, 14, 95, 42, 29, 74, 77, 84, 79, 1, 101, 64, 81, 87, 97, 58, 20, 51],12,[17, 19, 51, 38, 20, 23, 5, 91, 51, 40, 44, 38, 59, 9, 11, 14, 95, 42, 29, 74, 77, 84, 79, 1, 101, 64, 81, 87, 97, 58, 20, 51]).
:-end_in_pos.
:-begin_in_neg.
f([3, 45, 45, 99, 22, 57, 52, 56, 101, 61, 99, 39, 53, 84, 6, 72, 60, 22, 73, 59, 94, 60, 55, 37, 94, 25, 83, 61, 94, 72, 84, 47, 38, 44, 60, 31, 50, 45],28,[37, 94, 25, 83, 61, 94, 72, 84, 47, 38, 44, 60, 31, 50, 45]).
f([83, 50, 9, 77, 5, 32, 45, 8, 97, 67, 19, 76, 22, 49, 28, 65, 16, 67, 33, 52, 41, 90, 19, 71, 89, 79, 21, 99, 89, 73, 53, 74, 90, 21, 96, 17, 79],12,[19, 76, 22, 49, 28, 65, 16, 67, 33, 52, 41, 90, 19, 71, 89, 79, 21, 99, 89, 73, 53, 74, 90, 21, 96, 17, 79]).
f([47, 20, 70, 46, 101, 50, 3, 61],4,[50, 3, 61]).
f([40, 2, 41, 95, 80, 37, 68, 75, 22, 75, 21, 12, 34, 62, 51, 33, 71, 101, 64, 58, 7, 61, 12, 94, 98, 33, 80, 26, 14, 77, 59, 72, 65, 17, 42, 51, 11, 12, 1, 18],24,[40, 2, 41, 95, 80, 37, 68, 75, 22, 75, 21, 12, 34, 62, 51, 33, 71, 101, 64, 58, 7, 61, 12, 94, 98, 33, 80, 26, 14, 77, 59, 72, 65, 17, 42, 51, 11, 12, 1, 18]).
f([95, 73, 97, 83, 87, 45, 24, 55, 93, 52, 77, 58, 25, 101, 13, 46, 75, 14, 62, 58, 61, 61, 78, 49, 83, 55, 57, 1],28,[73, 97, 83, 87, 45, 24, 55, 93, 52, 77, 58, 25, 101, 13, 46, 75, 14, 62, 58, 61, 61, 78, 49, 83, 55, 57, 1]).
f([9, 35, 71, 9, 65, 62, 29, 58, 2, 85, 59, 78, 83, 86, 39, 35, 69, 81, 56, 80, 84, 25, 81, 41, 63, 23, 6, 31, 51, 16, 67, 48, 21, 64, 49, 36, 16],30,[21, 64, 49, 36, 16]).
f([17, 70, 35, 16, 20],0,[70, 35, 16, 20]).
f([84, 62, 45, 44, 14, 16, 57, 14, 56, 17, 51, 44, 15, 80, 46, 74, 48, 99, 66, 51, 94],17,[15, 80, 46, 74, 48, 99, 66, 51, 94]).
f([83, 32, 61, 88, 25, 65, 13, 99, 39, 13, 69, 101, 67, 24, 82, 96, 11, 64, 96, 81, 2],20,[101, 67, 24, 82, 96, 11, 64, 96, 81, 2]).
f([58, 46, 4, 66, 66, 60, 101, 53, 59, 88, 66, 53, 88],0,[4, 66, 66, 60, 101, 53, 59, 88, 66, 53, 88]).
:-end_in_neg.
