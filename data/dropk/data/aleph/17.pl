:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,7).
:- aleph_set(nodes,50000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,+element,-list)).
:- modeb(*,f(+list,+element,-list)).

:- determination(f/3,head/2).
:- determination(f/3,tail/2).
:- determination(f/3,geq/2).
:- determination(f/3,empty/1).
:- determination(f/3,even/1).
:- determination(f/3,odd/1).
:- determination(f/3,one/1).
:- determination(f/3,zero/1).
:- determination(f/3,decrement/2).
:- determination(f/3,f/3).
%% :- determination(f/3,increment/2).
%% :- determination(f/3,element/2).
%% :- determination(f/3,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.
:-end_bg.
:-begin_in_pos.
f([98, 73, 42, 93, 50, 89, 61, 94, 36, 26, 24, 59, 37, 40, 93, 1, 70, 14, 55, 9, 55, 71, 80, 17, 32, 96, 85, 42, 71, 7, 91, 26, 98, 97, 84],9,[26, 24, 59, 37, 40, 93, 1, 70, 14, 55, 9, 55, 71, 80, 17, 32, 96, 85, 42, 71, 7, 91, 26, 98, 97, 84]).
f([87, 69, 85, 25, 27, 64],5,[64]).
f([20, 91, 75, 29],2,[75, 29]).
f([78, 38, 64, 8, 34, 52, 49, 88, 43, 47, 37, 77, 27, 83, 52, 28, 3, 51, 14, 13, 39, 10, 64, 1, 33, 16, 57, 98, 92, 15, 24, 91, 9, 49, 54, 89, 75, 85],16,[3, 51, 14, 13, 39, 10, 64, 1, 33, 16, 57, 98, 92, 15, 24, 91, 9, 49, 54, 89, 75, 85]).
f([1, 5, 93, 29, 2, 44, 26, 5, 33, 40, 99, 11, 88, 10, 95, 46, 6, 28, 52, 7, 61, 35, 75, 5, 83, 97, 2, 31, 66, 18, 47, 2, 38, 53, 98, 26, 58, 50, 36, 99],1,[5, 93, 29, 2, 44, 26, 5, 33, 40, 99, 11, 88, 10, 95, 46, 6, 28, 52, 7, 61, 35, 75, 5, 83, 97, 2, 31, 66, 18, 47, 2, 38, 53, 98, 26, 58, 50, 36, 99]).
f([101, 100, 13, 99, 87, 56, 93, 14, 11, 61, 95, 81, 101, 17, 23, 80, 48, 86, 1, 56, 26, 29, 98, 17, 23, 101, 21, 65, 17, 58, 88, 46, 45, 99],30,[88, 46, 45, 99]).
f([31, 6, 38, 100, 51, 69, 42, 76, 66, 6, 40, 90, 99, 45, 42, 80, 36, 28, 76, 80, 46, 9, 14, 82, 59, 41, 56, 8, 32, 26, 18, 93, 20, 65, 6, 55, 69, 101, 38, 72, 20, 36, 82, 59, 16, 41, 70],5,[69, 42, 76, 66, 6, 40, 90, 99, 45, 42, 80, 36, 28, 76, 80, 46, 9, 14, 82, 59, 41, 56, 8, 32, 26, 18, 93, 20, 65, 6, 55, 69, 101, 38, 72, 20, 36, 82, 59, 16, 41, 70]).
f([41, 10, 48, 40, 91, 80, 98, 41, 54, 84, 1, 52, 58, 69, 55, 89, 31, 2, 17, 23, 8, 70, 3, 2, 95, 31],14,[55, 89, 31, 2, 17, 23, 8, 70, 3, 2, 95, 31]).
f([5, 3, 5, 11, 29, 28, 70, 22, 61, 6, 68],7,[22, 61, 6, 68]).
f([93, 11, 46, 49, 44, 81, 44, 57, 11, 11, 75, 7, 34, 2, 9, 87, 100, 17, 29, 1, 66, 76, 63, 56],22,[63, 56]).
:-end_in_pos.
:-begin_in_neg.
f([17, 47, 12, 92, 80, 30, 35, 71, 54, 93, 74, 12, 31, 63, 8, 83],8,[17, 47, 12, 92, 80, 30, 35, 71, 54, 93, 74, 12, 31, 63, 8, 83]).
f([60, 65, 27, 14, 86, 7, 56, 86, 50, 16, 19, 57, 91, 74, 32, 28, 65, 46, 60, 5, 38, 23, 10, 7, 94, 57, 90, 14, 86, 2, 68],3,[7, 56, 86, 50, 16, 19, 57, 91, 74, 32, 28, 65, 46, 60, 5, 38, 23, 10, 7, 94, 57, 90, 14, 86, 2, 68]).
f([10, 3, 79, 89, 76, 55, 54, 9, 68, 24, 34, 28, 29, 22, 62, 25, 21],7,[62, 25, 21]).
f([33, 33, 95, 49, 73, 35, 52, 8, 73],3,[52, 8, 73]).
f([48, 92, 52, 20, 7, 19, 44, 53, 21, 96, 64, 10, 22, 65, 68, 96, 94, 65, 8, 67, 66, 24, 64, 37, 73, 30, 69, 91, 82, 21, 93, 35, 6, 17, 6, 57, 47, 77, 16, 89, 45, 79, 30, 97, 49, 100, 87],43,[91, 82, 21, 93, 35, 6, 17, 6, 57, 47, 77, 16, 89, 45, 79, 30, 97, 49, 100, 87]).
f([50, 8, 18, 74, 43, 67, 13, 13, 99, 90, 38, 18, 12, 25, 24, 55, 30, 22, 18, 28, 60, 37, 14, 93, 14, 11, 81, 19, 27, 1, 61],28,[24, 55, 30, 22, 18, 28, 60, 37, 14, 93, 14, 11, 81, 19, 27, 1, 61]).
f([72, 15, 9],1,[9]).
f([25, 96, 19, 98, 94, 37, 29, 10],5,[98, 94, 37, 29, 10]).
f([9, 58, 55, 89, 58, 28, 48, 73, 52, 64, 20],8,[20]).
f([18, 6, 43, 51, 74, 69, 9, 1, 39, 100, 6, 74, 67, 5, 32, 19, 18, 12, 9, 84, 89, 18, 10, 86, 15, 41, 35, 61, 82, 32, 48, 70, 66, 100, 30, 17, 57, 55, 47, 101, 2, 97, 3, 83, 75, 11],33,[74, 69, 9, 1, 39, 100, 6, 74, 67, 5, 32, 19, 18, 12, 9, 84, 89, 18, 10, 86, 15, 41, 35, 61, 82, 32, 48, 70, 66, 100, 30, 17, 57, 55, 47, 101, 2, 97, 3, 83, 75, 11]).
:-end_in_neg.
