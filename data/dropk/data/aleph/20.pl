:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,7).
:- aleph_set(nodes,50000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,+element,-list)).
:- modeb(*,f(+list,+element,-list)).

:- determination(f/3,head/2).
:- determination(f/3,tail/2).
:- determination(f/3,geq/2).
:- determination(f/3,empty/1).
:- determination(f/3,even/1).
:- determination(f/3,odd/1).
:- determination(f/3,one/1).
:- determination(f/3,zero/1).
:- determination(f/3,decrement/2).
:- determination(f/3,f/3).
%% :- determination(f/3,increment/2).
%% :- determination(f/3,element/2).
%% :- determination(f/3,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.
:-end_bg.
:-begin_in_pos.
f([79, 11, 12, 17, 17, 91, 42, 12, 91],2,[12, 17, 17, 91, 42, 12, 91]).
f([48, 85, 38, 65, 51, 97, 22, 80, 78, 74, 17, 99, 17, 11, 16, 48, 33, 56, 21, 84, 30, 40, 84, 5, 65, 56, 95, 36, 2, 58, 28, 97, 74, 90, 4, 6, 47, 41, 55, 94, 75],26,[95, 36, 2, 58, 28, 97, 74, 90, 4, 6, 47, 41, 55, 94, 75]).
f([53, 23],2,[]).
f([73, 33, 68, 44, 84, 98, 63, 12, 90, 53, 23, 72],9,[53, 23, 72]).
f([51, 101, 85, 93, 32, 98, 36, 33, 46, 91, 19],4,[32, 98, 36, 33, 46, 91, 19]).
f([94, 6, 62, 24, 40, 95, 4, 79, 28, 30, 41, 72, 23],4,[40, 95, 4, 79, 28, 30, 41, 72, 23]).
f([2, 52, 90, 84, 55, 72, 64, 95, 91, 11, 2, 15, 68, 95, 26, 96, 31, 56, 23, 60, 29, 53, 13, 8, 24, 84, 83, 7, 42, 101],1,[52, 90, 84, 55, 72, 64, 95, 91, 11, 2, 15, 68, 95, 26, 96, 31, 56, 23, 60, 29, 53, 13, 8, 24, 84, 83, 7, 42, 101]).
f([88, 61, 63, 15, 58, 30, 3, 74, 28, 30, 101, 43, 84, 14, 3],11,[43, 84, 14, 3]).
f([90, 38, 4, 30, 26, 89, 66],7,[]).
f([91, 17, 94, 35, 86, 62, 59, 38, 15, 64, 19, 80, 12, 19, 61, 4, 44, 44, 53, 25, 29, 2, 3, 49, 97, 27, 63, 93, 51, 78, 50, 51, 34, 29, 94, 50, 67, 18, 82],4,[86, 62, 59, 38, 15, 64, 19, 80, 12, 19, 61, 4, 44, 44, 53, 25, 29, 2, 3, 49, 97, 27, 63, 93, 51, 78, 50, 51, 34, 29, 94, 50, 67, 18, 82]).
:-end_in_pos.
:-begin_in_neg.
f([101, 8],0,[8]).
f([22, 85, 31, 78, 28, 37, 51, 86, 81, 47, 16, 81, 96, 70, 22, 33, 66, 76],4,[81, 96, 70, 22, 33, 66, 76]).
f([27, 56, 50, 14, 66, 86, 83, 17, 18],0,[83, 17, 18]).
f([70, 87, 56, 89, 87, 99, 52, 70, 95, 84, 30, 16, 81, 67, 62, 84, 67, 15, 69, 23, 43, 80, 29, 67, 28, 15, 58, 11, 5, 101, 99, 37, 28, 81, 44, 81, 18, 60, 85, 8, 77, 5, 47, 24, 6, 68, 47],44,[85, 8, 77, 5, 47, 24, 6, 68, 47]).
f([42, 26, 97, 48, 19, 8, 21, 20, 93, 9, 95, 19, 101, 67, 55, 37, 26, 12, 23, 82, 76, 95, 38, 27, 95, 9, 53, 68, 100, 89, 31, 43, 21, 11, 94, 41, 6, 47, 55, 77, 97, 45, 99, 20, 64, 53, 71, 15],25,[26, 97, 48, 19, 8, 21, 20, 93, 9, 95, 19, 101, 67, 55, 37, 26, 12, 23, 82, 76, 95, 38, 27, 95, 9, 53, 68, 100, 89, 31, 43, 21, 11, 94, 41, 6, 47, 55, 77, 97, 45, 99, 20, 64, 53, 71, 15]).
f([9, 13, 12, 92, 32, 78, 59, 38, 58, 81, 61, 43, 60, 88, 24, 94, 31, 58, 96, 73, 5, 12, 93, 92, 73, 90, 44, 24, 17, 46, 72, 94],29,[94]).
f([91, 12, 79, 78, 4, 20, 39, 99, 95, 70, 2, 45, 72, 48, 37, 78, 38, 56, 68, 89, 3, 71],17,[45, 72, 48, 37, 78, 38, 56, 68, 89, 3, 71]).
f([41, 79, 24, 67, 22, 13, 1, 76, 40, 50, 29, 57, 12, 53, 45, 8, 89, 69, 11, 70, 36, 35, 99, 101, 66, 66, 35, 7, 27, 73, 62, 79, 78, 99, 17, 36, 79, 36, 3, 13, 58, 79, 40, 69, 53, 18, 88, 20, 42, 2],0,[50, 29, 57, 12, 53, 45, 8, 89, 69, 11, 70, 36, 35, 99, 101, 66, 66, 35, 7, 27, 73, 62, 79, 78, 99, 17, 36, 79, 36, 3, 13, 58, 79, 40, 69, 53, 18, 88, 20, 42, 2]).
f([11, 75, 17, 21, 37, 93, 17, 14, 96, 71, 87, 40, 59, 24, 14, 22, 19, 26, 33],2,[14, 22, 19, 26, 33]).
f([1, 46, 23, 39, 4, 38, 46, 26, 39, 79, 56, 11, 3, 49, 68, 33, 20, 55, 22, 7, 2, 91, 29, 11, 81, 73, 51, 6, 10, 65, 21, 98, 4],32,[55, 22, 7, 2, 91, 29, 11, 81, 73, 51, 6, 10, 65, 21, 98, 4]).
:-end_in_neg.
