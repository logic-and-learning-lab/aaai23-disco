:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,7).
:- aleph_set(nodes,50000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,+element,-list)).
:- modeb(*,f(+list,+element,-list)).

:- determination(f/3,head/2).
:- determination(f/3,tail/2).
:- determination(f/3,geq/2).
:- determination(f/3,empty/1).
:- determination(f/3,even/1).
:- determination(f/3,odd/1).
:- determination(f/3,one/1).
:- determination(f/3,zero/1).
:- determination(f/3,decrement/2).
:- determination(f/3,f/3).
%% :- determination(f/3,increment/2).
%% :- determination(f/3,element/2).
%% :- determination(f/3,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.
:-end_bg.
:-begin_in_pos.
f([86, 86, 70, 50],2,[70, 50]).
f([3, 89, 58, 23, 81, 61, 1, 9, 90, 22],1,[89, 58, 23, 81, 61, 1, 9, 90, 22]).
f([67, 48, 52, 32, 78, 78, 84, 32, 28, 89, 56, 86, 62, 61, 30, 11, 50, 85, 64, 94, 27, 96, 89, 87, 101, 41, 57, 27, 50, 59, 61],20,[27, 96, 89, 87, 101, 41, 57, 27, 50, 59, 61]).
f([15, 88, 58, 16, 2, 65, 42, 24, 99, 38, 62, 17, 29, 53, 57, 93, 45, 34, 39, 51, 97, 80, 39],4,[2, 65, 42, 24, 99, 38, 62, 17, 29, 53, 57, 93, 45, 34, 39, 51, 97, 80, 39]).
f([1, 3, 2, 62, 93, 47, 96, 7, 42, 19, 42, 68, 26, 81, 74, 73, 89, 22, 51, 85, 1, 11, 53, 75, 28, 7, 87],5,[47, 96, 7, 42, 19, 42, 68, 26, 81, 74, 73, 89, 22, 51, 85, 1, 11, 53, 75, 28, 7, 87]).
f([80, 19, 45, 64, 28],4,[28]).
f([83, 54, 28, 94, 86, 101],6,[]).
f([94, 71, 81, 15, 96, 87, 99, 79, 65, 53, 32, 14, 26, 20, 60, 11, 19, 59, 93, 41, 12, 79, 70, 9, 37, 57, 26, 52, 29, 88, 6, 16, 67, 28, 67, 66, 96, 22],2,[81, 15, 96, 87, 99, 79, 65, 53, 32, 14, 26, 20, 60, 11, 19, 59, 93, 41, 12, 79, 70, 9, 37, 57, 26, 52, 29, 88, 6, 16, 67, 28, 67, 66, 96, 22]).
f([79, 28, 75, 79, 55, 8, 69, 26, 50, 24, 88, 51, 48, 58, 87, 26, 42, 12, 2, 77, 42, 16, 76, 72, 41, 7, 96, 91, 48, 36, 78, 92, 20, 64, 61, 69, 31],34,[61, 69, 31]).
f([72, 61, 18, 86, 46, 98, 7, 71, 91, 32, 22, 9, 9, 70, 73, 22, 58, 86, 69, 6, 83, 30, 86, 80, 9, 60, 87, 51, 42, 1, 48, 76, 28, 85, 65, 85, 4, 27, 68, 28, 56, 13],37,[27, 68, 28, 56, 13]).
:-end_in_pos.
:-begin_in_neg.
f([22, 2, 90, 65, 68, 54, 22, 45, 67, 93, 82, 87, 1, 60, 81, 5, 76, 48, 82, 57, 45, 67, 23, 69, 5, 77, 10, 101, 99, 75, 88, 15, 41, 67, 17, 89, 68, 74, 32, 63, 53, 50, 93, 50, 83, 79, 66, 100],20,[22, 45, 67, 93, 82, 87, 1, 60, 81, 5, 76, 48, 82, 57, 45, 67, 23, 69, 5, 77, 10, 101, 99, 75, 88, 15, 41, 67, 17, 89, 68, 74, 32, 63, 53, 50, 93, 50, 83, 79, 66, 100]).
f([33, 18, 50, 90, 90, 96, 63, 35, 62, 34, 83, 16, 68, 64, 31, 90, 41, 96, 47, 64, 40, 94, 57, 7, 26, 8, 57, 97, 7, 89, 66, 78, 54, 96, 65, 25, 17, 15, 78],35,[66, 78, 54, 96, 65, 25, 17, 15, 78]).
f([87, 23, 45, 80, 98, 10, 46, 70, 58, 57, 33, 56, 61, 86, 52, 73, 41, 19, 76, 51, 23],14,[23, 45, 80, 98, 10, 46, 70, 58, 57, 33, 56, 61, 86, 52, 73, 41, 19, 76, 51, 23]).
f([68, 41, 34, 87, 87, 30, 74, 101, 32, 72, 59, 55],12,[30, 74, 101, 32, 72, 59, 55]).
f([51, 99, 63, 92, 88, 52, 13, 41, 84, 89, 89, 42, 19, 76, 13, 47, 12, 98, 37, 49, 35, 87, 4, 3, 71, 55, 83, 31, 50, 90, 28, 70, 55, 9, 78, 43, 69],34,[12, 98, 37, 49, 35, 87, 4, 3, 71, 55, 83, 31, 50, 90, 28, 70, 55, 9, 78, 43, 69]).
f([58, 28, 64, 1, 89, 58, 77, 40, 34, 47, 98, 39, 78, 80, 30, 68, 49, 75, 55, 58, 76, 73, 37, 40, 42, 88, 2, 89, 14, 35, 8, 69, 97, 20, 86, 3, 42, 61, 63, 19, 50],10,[73, 37, 40, 42, 88, 2, 89, 14, 35, 8, 69, 97, 20, 86, 3, 42, 61, 63, 19, 50]).
f([17, 14, 60, 91, 80, 52, 78, 91, 90, 70, 6, 82, 83, 59, 57, 5, 88, 88, 97, 9, 85, 28, 65, 48, 14, 33, 94, 55, 66, 12, 51, 7, 64, 75, 63, 91, 6, 61, 52, 38, 82, 90, 44, 88, 76, 67, 2, 53, 53, 29],11,[91, 90, 70, 6, 82, 83, 59, 57, 5, 88, 88, 97, 9, 85, 28, 65, 48, 14, 33, 94, 55, 66, 12, 51, 7, 64, 75, 63, 91, 6, 61, 52, 38, 82, 90, 44, 88, 76, 67, 2, 53, 53, 29]).
f([89, 28, 46, 80, 79, 1, 98, 4, 20, 68, 14, 25, 48, 101, 90, 7, 22, 45, 1, 92, 86, 42, 96, 44, 31, 52, 79, 34, 24, 45, 29, 30, 63, 75, 25, 31, 81, 31, 101, 23, 79, 45, 5, 1, 90, 83, 36],10,[42, 96, 44, 31, 52, 79, 34, 24, 45, 29, 30, 63, 75, 25, 31, 81, 31, 101, 23, 79, 45, 5, 1, 90, 83, 36]).
f([41, 1, 21, 29, 43, 90, 32, 42, 69, 20, 100, 79, 22, 77, 65, 12, 57, 71, 79, 21, 23, 1, 60, 32, 3, 73, 11, 31, 2, 92, 32, 71, 85, 83, 36, 92],12,[73, 11, 31, 2, 92, 32, 71, 85, 83, 36, 92]).
f([100, 16, 92, 1, 4, 44, 39, 28],4,[44, 39, 28]).
:-end_in_neg.
