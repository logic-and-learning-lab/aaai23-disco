:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,7).
:- aleph_set(nodes,50000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,+element,-list)).
:- modeb(*,f(+list,+element,-list)).

:- determination(f/3,head/2).
:- determination(f/3,tail/2).
:- determination(f/3,geq/2).
:- determination(f/3,empty/1).
:- determination(f/3,even/1).
:- determination(f/3,odd/1).
:- determination(f/3,one/1).
:- determination(f/3,zero/1).
:- determination(f/3,decrement/2).
:- determination(f/3,f/3).
%% :- determination(f/3,increment/2).
%% :- determination(f/3,element/2).
%% :- determination(f/3,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.
:-end_bg.
:-begin_in_pos.
f([91, 76, 50, 64, 8, 26, 22, 48, 92, 15, 58],8,[92, 15, 58]).
f([12, 55, 27, 20, 1, 73, 35, 15, 6, 84, 51, 21, 99, 97, 91, 66, 25, 45, 99, 44, 73, 82, 6, 68, 22, 94, 93, 65, 11, 98, 40, 24],9,[84, 51, 21, 99, 97, 91, 66, 25, 45, 99, 44, 73, 82, 6, 68, 22, 94, 93, 65, 11, 98, 40, 24]).
f([19, 66, 3, 71, 1, 94, 88, 64, 28, 28, 47],5,[94, 88, 64, 28, 28, 47]).
f([31, 57, 52, 43, 24, 56, 78, 61, 28, 4, 20, 59, 85, 85, 81, 9, 66, 79, 7, 86],5,[56, 78, 61, 28, 4, 20, 59, 85, 85, 81, 9, 66, 79, 7, 86]).
f([75, 85, 1, 76, 89, 88, 29, 21, 50, 84, 96, 100, 86, 49, 62, 6, 49, 86, 92, 2, 18, 88, 100, 73, 56, 19, 54, 37, 88, 83, 74, 66, 10, 43, 10, 88, 99, 39, 95, 80, 23, 42, 80, 26, 57],28,[88, 83, 74, 66, 10, 43, 10, 88, 99, 39, 95, 80, 23, 42, 80, 26, 57]).
f([100, 21, 50, 64, 16, 20, 72, 55, 41, 72, 73, 25, 44, 54, 50],13,[54, 50]).
f([53, 50, 77, 9, 67, 95, 49, 61, 24, 83, 82],1,[50, 77, 9, 67, 95, 49, 61, 24, 83, 82]).
f([99, 101, 96, 88, 45, 4, 1, 100, 59, 97, 92, 14, 36, 48, 47, 94, 18, 76, 94, 56, 40, 83, 96, 74, 64, 58, 46, 78, 93, 19, 22, 43, 61, 40, 78],5,[4, 1, 100, 59, 97, 92, 14, 36, 48, 47, 94, 18, 76, 94, 56, 40, 83, 96, 74, 64, 58, 46, 78, 93, 19, 22, 43, 61, 40, 78]).
f([25, 69, 30, 71, 35, 74, 75, 92],7,[92]).
f([21, 87, 39, 55, 6, 26, 95, 28],4,[6, 26, 95, 28]).
:-end_in_pos.
:-begin_in_neg.
f([72, 96, 87, 16, 86, 82, 70, 19, 100, 31, 45, 74, 25, 31, 24, 44, 17, 88, 33, 20, 42, 27, 46, 14, 12],15,[86, 82, 70, 19, 100, 31, 45, 74, 25, 31, 24, 44, 17, 88, 33, 20, 42, 27, 46, 14, 12]).
f([89, 35, 2, 48, 63, 55, 24, 77, 20, 66, 39, 25, 50, 78, 31, 32, 37, 88, 101, 94, 40, 3, 43, 68, 60, 80, 41, 86, 58, 24, 10, 5, 11],31,[60, 80, 41, 86, 58, 24, 10, 5, 11]).
f([5, 34, 91, 72, 39, 81, 86, 101, 8, 58, 22, 40, 14, 61, 81, 26, 22, 60, 100, 23, 6, 68, 2, 31, 92, 79, 69, 98],10,[81, 86, 101, 8, 58, 22, 40, 14, 61, 81, 26, 22, 60, 100, 23, 6, 68, 2, 31, 92, 79, 69, 98]).
f([82, 89, 71, 23, 45, 67, 3, 41, 14, 4, 58, 97],6,[58, 97]).
f([63, 55, 31, 37, 84, 85, 42, 15, 64, 50, 62, 50, 67, 80, 9, 52, 91, 77],9,[15, 64, 50, 62, 50, 67, 80, 9, 52, 91, 77]).
f([36, 77, 49, 33, 48, 54, 16, 72],0,[77, 49, 33, 48, 54, 16, 72]).
f([80, 15, 60, 73, 38, 99, 27, 72, 77, 18, 53, 15, 53, 67, 2, 11, 25, 58, 6, 54, 43, 42, 69, 49, 18, 16, 23, 96, 98, 88, 8, 80, 64, 12, 11, 27, 93, 89, 12, 77, 56, 1, 71, 76],3,[15, 60, 73, 38, 99, 27, 72, 77, 18, 53, 15, 53, 67, 2, 11, 25, 58, 6, 54, 43, 42, 69, 49, 18, 16, 23, 96, 98, 88, 8, 80, 64, 12, 11, 27, 93, 89, 12, 77, 56, 1, 71, 76]).
f([39, 7, 11, 13, 88, 49, 46, 50, 86, 44, 70, 56, 64, 85],13,[49, 46, 50, 86, 44, 70, 56, 64, 85]).
f([15, 90, 48, 75, 91, 87],1,[15, 90, 48, 75, 91, 87]).
f([88, 4, 90, 52, 76, 58, 86, 68, 49, 59, 55, 50, 68, 61, 96, 99, 11, 101, 84, 93, 3, 68, 36, 20, 31, 86, 16, 32, 79, 89, 63, 100, 84, 50, 49, 7, 11, 6, 91, 36, 17, 42, 9, 94, 11, 66, 83, 11, 43, 73, 68],39,[4, 90, 52, 76, 58, 86, 68, 49, 59, 55, 50, 68, 61, 96, 99, 11, 101, 84, 93, 3, 68, 36, 20, 31, 86, 16, 32, 79, 89, 63, 100, 84, 50, 49, 7, 11, 6, 91, 36, 17, 42, 9, 94, 11, 66, 83, 11, 43, 73, 68]).
:-end_in_neg.
