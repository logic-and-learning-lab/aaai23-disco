:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,7).
:- aleph_set(nodes,50000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,+element,-list)).
:- modeb(*,f(+list,+element,-list)).

:- determination(f/3,head/2).
:- determination(f/3,tail/2).
:- determination(f/3,geq/2).
:- determination(f/3,empty/1).
:- determination(f/3,even/1).
:- determination(f/3,odd/1).
:- determination(f/3,one/1).
:- determination(f/3,zero/1).
:- determination(f/3,decrement/2).
:- determination(f/3,f/3).
%% :- determination(f/3,increment/2).
%% :- determination(f/3,element/2).
%% :- determination(f/3,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.
:-end_bg.
:-begin_in_pos.
f([25, 82, 28, 65, 88, 52, 3, 28, 75, 5, 17, 9, 52, 61, 74, 55],13,[61, 74, 55]).
f([68, 30, 8, 56, 85],5,[]).
f([36, 37, 71, 95, 86, 23, 78, 32, 88, 79, 95, 81, 42, 9, 1, 101, 23, 80, 56, 14, 31, 51, 94, 31, 100, 63, 44, 32, 16, 83],2,[71, 95, 86, 23, 78, 32, 88, 79, 95, 81, 42, 9, 1, 101, 23, 80, 56, 14, 31, 51, 94, 31, 100, 63, 44, 32, 16, 83]).
f([50, 43, 22, 19, 49, 84, 65, 14, 4, 50, 99, 50, 52, 98, 35, 30, 28, 28, 2, 63, 43, 7, 93, 74, 40, 78, 28, 67, 28, 50, 93, 46, 8, 6, 26, 67, 3, 13, 5, 38, 2, 81, 83, 21, 83, 8, 30, 17, 30, 84, 28],41,[81, 83, 21, 83, 8, 30, 17, 30, 84, 28]).
f([15, 100, 99, 80, 30],2,[99, 80, 30]).
f([75, 11, 45, 16, 49, 16, 84, 101, 30, 21, 21, 59, 19, 9, 16, 22, 65, 83, 64, 67, 54, 65, 24, 16, 101, 85, 79, 32, 62, 18, 56, 66, 66, 100, 46, 89, 9, 98, 88, 88, 12, 34, 36, 69, 32, 63],31,[66, 66, 100, 46, 89, 9, 98, 88, 88, 12, 34, 36, 69, 32, 63]).
f([20, 18, 57, 11, 96, 24, 7],3,[11, 96, 24, 7]).
f([30, 85, 71, 30, 99, 101, 78, 31, 44, 18, 89, 42, 51, 100, 39, 65, 98, 2, 43, 54, 97, 7, 52, 12, 15, 12, 92, 33, 70, 68, 34, 82, 39, 84, 32, 51, 79, 29, 21, 67, 39, 98, 65],30,[34, 82, 39, 84, 32, 51, 79, 29, 21, 67, 39, 98, 65]).
f([61, 32, 67, 49, 2, 83],4,[2, 83]).
f([22, 14, 9, 93, 52, 28, 96],4,[52, 28, 96]).
:-end_in_pos.
:-begin_in_neg.
f([27, 95, 64, 26, 3, 77, 83, 79, 65, 51, 63, 41, 39, 22, 38, 19, 6, 52, 91, 36, 43, 4, 29, 8, 36, 10, 19, 95, 76, 101, 64, 49, 78, 44, 58, 2, 9, 13, 88, 30, 2, 38, 68, 25, 67, 4, 72, 29, 98, 59],11,[3, 77, 83, 79, 65, 51, 63, 41, 39, 22, 38, 19, 6, 52, 91, 36, 43, 4, 29, 8, 36, 10, 19, 95, 76, 101, 64, 49, 78, 44, 58, 2, 9, 13, 88, 30, 2, 38, 68, 25, 67, 4, 72, 29, 98, 59]).
f([23, 6, 33, 35, 70, 89, 37, 1, 27, 84, 71, 30, 67, 75, 57, 84, 58, 93, 89, 65, 6, 3, 66, 35, 62, 86, 98, 2, 29, 44, 91, 15, 18, 19, 53, 10, 74, 44, 68, 17, 12, 81],13,[86, 98, 2, 29, 44, 91, 15, 18, 19, 53, 10, 74, 44, 68, 17, 12, 81]).
f([15, 85, 41, 81, 98, 101, 21, 84, 68, 12, 86, 14, 85, 41, 30, 52],6,[68, 12, 86, 14, 85, 41, 30, 52]).
f([16, 95, 87, 23, 44, 63, 74, 95, 97],7,[23, 44, 63, 74, 95, 97]).
f([97, 28, 8, 47, 60, 21, 69, 16, 51, 33, 10, 95, 89, 98, 32, 25, 35, 75, 87, 38, 71, 50, 80, 99, 34, 55, 25, 96, 9, 40, 51, 71, 24, 3, 91, 41, 31, 25, 86, 8, 72, 98, 38, 88, 42, 17, 73, 29],38,[25, 86, 8, 72, 98, 38, 88, 42, 17, 73, 29]).
f([9, 27, 91, 32, 66, 49, 80, 8, 87],2,[8, 87]).
f([44, 51, 73, 75, 30, 40, 32, 55, 42, 9, 50, 81, 72, 91, 35, 7, 94, 15, 40, 66, 73, 37, 83, 24, 1, 46, 70, 97, 47, 92, 25, 81, 36, 70, 39, 6],12,[36, 70, 39, 6]).
f([73, 97, 17, 61, 33, 42, 98, 91, 25, 96, 34, 79, 34, 86, 92, 78, 65, 70, 50, 91, 66, 26, 73, 70, 1, 8, 33, 90, 70, 13, 31, 47, 72, 60, 57, 54, 49, 98, 36, 83, 93, 25, 60, 14, 19, 29, 41, 86, 22, 29],4,[65, 70, 50, 91, 66, 26, 73, 70, 1, 8, 33, 90, 70, 13, 31, 47, 72, 60, 57, 54, 49, 98, 36, 83, 93, 25, 60, 14, 19, 29, 41, 86, 22, 29]).
f([65, 54, 99, 29, 71, 101, 56, 83, 11, 10, 14, 56, 20, 65, 75, 80, 5, 16, 83, 85, 83, 75, 90, 96, 2, 91, 30, 66, 42, 49, 82, 48, 89, 100, 88, 93, 74],36,[20, 65, 75, 80, 5, 16, 83, 85, 83, 75, 90, 96, 2, 91, 30, 66, 42, 49, 82, 48, 89, 100, 88, 93, 74]).
f([17, 57, 7, 25, 89, 92, 19, 61],6,[7, 25, 89, 92, 19, 61]).
:-end_in_neg.
